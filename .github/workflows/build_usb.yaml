
name: 构建U盘ubuntu镜像
on:
  workflow_dispatch:
    inputs:
      ubuntu_version:
        description: '选择 Ubuntu 版本（例如 jammy 或 noble）'
        required: true
        default: 'noble'
        type: choice
        options:
          - jammy
          - noble
      packages:
        description: '预装软件包列表（每个软件包的名字之间以空格分隔）'
        required: false
        default: ''
        type: string
      mirror_url:
        description: 'chroot环境使用的镜像站地址'
        required: true
        default: 'https://archive.ubuntu.com/ubuntu/'
        type: choice
        options:
          - https://archive.ubuntu.com/ubuntu/
          - https://mirrors.aliyun.com/ubuntu/
          - https://mirrors.tuna.tsinghua.edu.cn/ubuntu/

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: 清理磁盘空间
        uses: jlumbroso/free-disk-space@main
        with:
          tool-cache: false
          android: true

      - name: 检出仓库
        uses: actions/checkout@v4

      - name: 安装依赖
        run: |
          sudo apt-get update
          sudo apt-get install -y debootstrap xorriso grub-efi-amd64 mtools e2fsprogs

      - name: 创建基础系统 (chroot部分) 镜像文件
        run: |
          set -e
          mkdir -p ~/ubuntu-usb/chroot
          cd ~/ubuntu-usb/chroot
          # 创建一个空的镜像文件用于存放chroot内容
          chroot_image="chroot.img"
          sudo dd if=/dev/zero of=$chroot_image bs=1M count=3072
          sudo mkfs.ext4 $chroot_image
          sudo mkdir -p chroot_mount
          sudo mount $chroot_image chroot_mount

          sudo debootstrap --arch=amd64 ${{ github.event.inputs.ubuntu_version }} chroot_mount https://archive.ubuntu.com/ubuntu/

          sudo mount --bind /dev chroot_mount/dev
          sudo mount --bind /run chroot_mount/run
          sudo mount --bind /proc chroot_mount/proc

          echo "deb https://archive.ubuntu.com/ubuntu/  ${{ github.event.inputs.ubuntu_version }} universe" | sudo tee -a chroot_mount/etc/apt/sources.list
          echo "deb https://archive.ubuntu.com/ubuntu/  ${{ github.event.inputs.ubuntu_version }}-updates universe" | sudo tee -a chroot_mount/etc/apt/sources.list

          sudo chroot chroot_mount /bin/bash -c "apt-get update && apt-get install -y grub-efi-amd64"

          # 在chroot环境中添加自启动脚本
          sudo tee chroot_mount/etc/rc.local <<EOF
          #!/bin/bash
          # 修改镜像站为用户选择的
          sed -i 's|${{ github.event.inputs.mirror_url }}|http://archive.ubuntu.com/ubuntu/|g' /etc/apt/sources.list
          sed -i 's|${{ github.event.inputs.mirror_url }}|https://archive.ubuntu.com/ubuntu/|g' /etc/apt/sources.list
          # 安装用户输入的软件包
          apt-get update && apt-get install -y ${{ github.event.inputs.packages }}
          # 删除自启动脚本
          rm /etc/rc.local
          EOF
          sudo chmod +x chroot_mount/etc/rc.local

          sudo umount chroot_mount/dev
          sudo umount chroot_mount/run
          sudo umount chroot_mount/proc
          sudo umount chroot_mount
          sudo rmdir chroot_mount

      - name: 创建EFI系统部分镜像文件
        run: |
          cd ~/ubuntu-usb
          efi_image="efi.img"
          sudo dd if=/dev/zero of=$efi_image bs=1M count=100
          sudo mkfs.fat -F 32 $efi_image
          sudo mkdir -p efi_mount
          sudo mount $efi_image efi_mount
          sudo mkdir -p efi_mount/EFI/BOOT
          # 这里假设安装grub相关文件到EFI分区（实际可能需要更精确的操作）
          sudo grub-install --target=x86_64-efi --efi-directory=efi_mount --bootloader-id="Ubuntu USB" --removable
          sudo umount efi_mount
          sudo rmdir efi_mount

      - name: 创建并挂载ubuntu-usb.img
        run: |
          cd ~/ubuntu-usb
          # 创建一个空的img文件，大小根据实际需求调整
          sudo dd if=/dev/zero of=ubuntu-usb.img bs=1M count=4096
          sudo mkdir -p usb_mount
          sudo mount -o loop ubuntu-usb.img usb_mount

      - name: 复制文件到ubuntu-usb.img
        run: |
          cd ~/ubuntu-usb
          sudo cp chroot.img usb_mount/
          sudo cp efi.img usb_mount/

      - name: 卸载ubuntu-usb.img
        run: |
          cd ~/ubuntu-usb
          sudo umount usb_mount
          sudo rmdir usb_mount

      - name: 设置版本号
        run: echo "VERSION=v${{ github.run_number }}_usb" >> $GITHUB_ENV

      - name: 压缩img镜像
        run: |
          gzip -8 -k ~/ubuntu-usb/ubuntu-usb.img

      - name: 分割文件
        run: |
          split -b 1G ~/ubuntu-usb/ubuntu-usb.img.gz ./part_  # 按 1GB 分割文件

      - name: 创建并上传 Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ env.VERSION }}  # 使用推送的标签名
          name: ${{ env.VERSION }}  # Release 名称
          body: "请先合并下载的所有文件再使用"  # Release 描述
          files: |
            ./part_*
          token: ${{ secrets.GITHUB_TOKEN }}  # 使用默认的 GITHUB_TOKEN

      - name: 清理工作目录
        run: |
          sudo rm -rf ~/ubuntu-usb

