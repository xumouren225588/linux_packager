name: 构建U盘ubuntu镜像
on:
  workflow_dispatch:
    inputs:
      ubuntu_version:
        description: '选择 Ubuntu 版本（例如 jammy 或 noble）'
        required: true
        default: 'noble'
        type: choice
        options:
          - jammy
          - noble
      packages:
        description: '预装软件包列表（每个软件包的名字之间以空格分隔）'
        required: false
        default: ''
        type: string
      mirror_url:
        description: 'chroot环境使用的镜像站地址'
        required: true
        default: 'http://archive.ubuntu.com/ubuntu/'
        type: choice
        options:
          - http://archive.ubuntu.com/ubuntu/
          - http://mirrors.aliyun.com/ubuntu/
          - http://mirrors.tuna.tsinghua.edu.cn/ubuntu/

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: 清理磁盘空间
        uses: jlumbroso/free-disk-space@main
        with:
          tool-cache: false
          android: true

      - name: 检出仓库
        uses: actions/checkout@v4

      - name: 安装依赖
        run: |
          sudo apt-get update
          sudo apt-get install -y debootstrap xorriso grub-efi-amd64 mtools e2fsprogs

      - name: 创建基础系统
        run: |
          set -e
          mkdir -p ~/ubuntu-usb
          cd ~/ubuntu-usb
          sudo debootstrap --arch=amd64 ${{ github.event.inputs.ubuntu_version }} chroot https://archive.ubuntu.com/ubuntu/

          sudo mount --bind /dev chroot/dev
          sudo mount --bind /run chroot/run
          sudo mount --bind /proc chroot/proc

          echo "deb https://archive.ubuntu.com/ubuntu/  ${{ github.event.inputs.ubuntu_version }} universe" | sudo tee -a chroot/etc/apt/sources.list
          echo "deb https://archive.ubuntu.com/ubuntu/  ${{ github.event.inputs.ubuntu_version }}-updates universe" | sudo tee -a chroot/etc/apt/sources.list

          sudo chroot chroot /bin/bash -c "apt-get update && apt-get install -y grub-efi-amd64"

          # 在chroot环境中添加自启动脚本
          sudo tee chroot/etc/rc.local <<EOF
          #!/bin/bash
          # 修改镜像站为用户选择的
          sed -i 's|${{ github.event.inputs.mirror_url }}|http://archive.ubuntu.com/ubuntu/|g' /etc/apt/sources.list
          sed -i 's|${{ github.event.inputs.mirror_url }}|https://archive.ubuntu.com/ubuntu/|g' /etc/apt/sources.list
          # 安装用户输入的软件包
          apt-get update && apt-get install -y ${{ github.event.inputs.packages }}
          # 删除自启动脚本
          rm /etc/rc.local
          EOF
          sudo chmod +x chroot/etc/rc.local

          sudo umount -l chroot/dev
          sudo umount -l chroot/run
          sudo umount -l chroot/proc

      - name: 创建 ext4 文件系统镜像
        run: |
          cd ~/ubuntu-usb
          sudo dd if=/dev/zero of=ext4.img bs=1M count=3072
          sudo mkfs.ext4 -F -L "Ubuntu USB" ext4.img  # 格式化为 ext4 文件系统
          sudo mkdir -p ext4_mount  # 创建挂载点
          sudo mount -o loop ext4.img ext4_mount  # 挂载 ext4 镜像文件

      - name: 将 chroot 内容复制到 ext4 文件系统
        run: |
          cd ~/ubuntu-usb
          sudo cp -a chroot/. ext4_mount/  # 将 chroot 内容复制到 ext4 文件系统
          sudo umount -l ext4_mount  # 卸载 ext4 镜像文件
          sudo rm -rf chroot  # 删除 chroot 目录（可选）

      - name: 手动编辑 GRUB2 配置文件
        run: |
          cd ~/ubuntu-usb
          sudo mkdir -p ext4_mount/boot/grub
          sudo tee ext4_mount/boot/grub/grub.cfg <<EOF
          set timeout=5
          set default=0

          # 自动搜索包含 vmlinuz 的设备
          search --set=root --file /boot/vmlinuz

          menuentry 'Ubuntu on USB' {
              linux /boot/vmlinuz-$(ls ext4_mount/boot/vmlinuz-* | sed 's/.*vmlinuz-//') root=\${root} ro quiet splash
              initrd /boot/initrd.img-$(ls ext4_mount/boot/initrd.img-* | sed 's/.*initrd.img-//')
          }
          EOF

      - name: 创建可启动 ISO 镜像
        run: |
          cd ~/ubuntu-usb
          sudo grub-mkrescue -o ubuntu-usb.iso . -- --as mkisofs -J -R -joliet-long

      - name: 设置版本号
        run: echo "VERSION=v${{ github.run_number }}_usb" >> $GITHUB_ENV

      - name: 压缩
        run: |
          gzip -8 -k ~/ubuntu-usb/ubuntu-usb.iso

      - name: 分割文件
        run: |
          split -b 1G ~/ubuntu-usb/ubuntu-usb.iso.gz ./part_  # 按 4GB 分割文件

      - name: 创建并上传 Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ env.VERSION }}  # 使用推送的标签名
          name: ${{ env.VERSION }}  # Release 名称
          body: "请先合并下载的所有文件再使用"  # Release 描述
          files: |
            ./part_*
          token: ${{ secrets.GITHUB_TOKEN }}  # 使用默认的 GITHUB_TOKEN

      - name: 清理工作目录
        run: |
          sudo rm -rf ~/ubuntu-usb
