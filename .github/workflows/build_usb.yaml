
name: 构建U盘ubuntu镜像
on:
  workflow_dispatch:
    inputs:
      ubuntu_version:
        description: '选择 Ubuntu 版本（例如 jammy 或 noble）'
        required: true
        default: 'noble'
        type: choice
        options:
          - jammy
          - noble
      packages:
        description: '预装软件包列表（每个软件包的名字之间以空格分隔）'
        required: false
        default: ''
        type: string
      mirror_url:
        description: 'chroot环境使用的镜像站地址'
        required: true
        default: 'https://archive.ubuntu.com/ubuntu/'
        type: choice
        options:
          - https://archive.ubuntu.com/ubuntu/
          - https://mirrors.aliyun.com/ubuntu/
          - https://mirrors.tuna.tsinghua.edu.cn/ubuntu/
      password:
        description: 'WiFi密码'
        required: false
        type: string
      ssid:
        description: 'WiFi名称'
        required: false
        type: string
      use_wifi:
        description: '是否使用WiFi连接（否则使用有线连接）'
        required: true
        default: 'false'
        type: boolean

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: 清理磁盘空间
        uses: jlumbroso/free-disk-space@main
        with:
          tool-cache: false
          android: true

      - name: 检出仓库
        uses: actions/checkout@v4

      - name: 安装依赖
        run: |
          sudo apt-get update
          sudo apt-get install -y debootstrap xorriso grub-efi-amd64 mtools e2fsprogs
      - name: 创建并挂载ubuntu-usb.img
        run: |
          mkdir -p ~/ubuntu-usb
          cd ~/ubuntu-usb
          # 创建一个空的img文件，大小根据实际需求调整
          sudo dd if=/dev/zero of=ubuntu-usb.img bs=1M count=4096
          # 使用 parted 创建分区表
          sudo parted ubuntu-usb.img --script \
            mklabel gpt \
            mkpart ESP fat32 1MiB 101MiB \
            set 1 boot on \
            mkpart primary ext4 101MiB 100%
            # 挂载镜像文件并格式化分区
            sudo kpartx -av ubuntu-usb.img
            sleep 5  # 等待设备映射完成
            sudo mkfs.fat -F 32 /dev/mapper/loop0p1
            sudo mkfs.ext4 /dev/mapper/loop0p2
          sudo mkdir -p efi root
          sudo mount /dev/mapper/loop0p1 efi
          sudo mount /dev/mapper/loop0p2 root
      
      - name: 创建基础系统
        run: |
          cd ~/ubuntu-usb
          sudo debootstrap --arch=amd64 ${{ github.event.inputs.ubuntu_version }} root https://archive.ubuntu.com/ubuntu/
          sudo mkdir -p root/efi
          sudo mount --bind /dev root/dev
          sudo mount --bind /run root/run
          sudo mount --bind /proc root/proc
          sudo mount --bind efi root/efi

          echo "deb https://archive.ubuntu.com/ubuntu/ ${{ github.event.inputs.ubuntu_version }} universe" | sudo tee -a root/etc/apt/sources.list
          echo "deb https://archive.ubuntu.com/ubuntu/ ${{ github.event.inputs.ubuntu_version }}-updates universe" | sudo tee -a root/etc/apt/sources.list

          
          # 复制内核文件和初始化RAM磁盘文件
          sudo cp /boot/vmlinuz root/boot/
          sudo cp /boot/initrd.img root/boot/
          sudo cp /boot/vmlinuz-* root/boot/
          sudo cp /boot/initrd.img-* root/boot/
          sudo chroot root /bin/bash -c "apt-get update && apt-get install -y wget zip unzip"
          sudo chroot root /bin/bash -c "wget https://github.com/CloverHackyColor/CloverBootloader/releases/download/5161/CLOVERX64.efi.zip -O /tmp/cloverx64.efi.zip"
          sudo chroot root /bin/bash -c "mkdir -p /efi/EFI/BOOT"
          sudo chroot root /bin/bash -c "unzip /tmp/cloverx64.efi.zip -d /efi/EFI/BOOT"
          sudo chroot root /bin/bash -c "mv /efi/EFI/BOOT/CLOVERX64.efi /efi/EFI/BOOT/bootx64.efi"
          sudo chroot root /bin/bash -c "mkdir -p /efi/EFI/CLOVER"

          # 创建并编辑 config.plist 文件
          sudo tee root/efi/EFI/CLOVER/config.plist <<EOF >
          <?xml version="1.0" encoding="UTF-8"?>
          <!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
          <plist version="1.0">
              <dict>
                  <key>Boot</key>
                  <dict>
                      <key>Timeout</key>
                      <integer>5</integer>
                      <key>DefaultVolume</key>
                      <string>Linux</string>
                  </dict>
                  <key>GUI</key>
                  <dict>
                      <key>Scan</key>
                      <dict>
                          <key>Entries</key>
                          <true/>
                          <key>Linux</key>
                          <true/>
                          <key>Windows</key>
                          <false/>
                          <key>Apple</key>
                          <false/>
                      </dict>
                  </dict>
              </dict>
          </plist>
          EOF
          # 在chroot环境中添加自启动脚本
          sudo tee root/etc/rc.local <<EOF >
          #!/bin/bash
          if [ "${{ github.event.inputs.use_wifi }}" = "true" ]; then
              nmcli dev wifi connect ${{ github.event.inputs.ssid }} password ${{ github.event.inputs.password }}
          fi
          # 修改镜像站为用户选择的
          sed -i 's|${{ github.event.inputs.mirror_url }}|http://archive.ubuntu.com/ubuntu/|g' /etc/apt/sources.list
          sed -i 's|${{ github.event.inputs.mirror_url }}|https://archive.ubuntu.com/ubuntu/|g' /etc/apt/sources.list
          # 安装用户输入的软件包
          apt-get update && apt-get install -y ${{ github.event.inputs.packages }}
          # 删除自启动脚本
          rm /etc/rc.local
          EOF
          sudo chmod +x root/etc/rc.local
          sudo chroot root /bin/bash -c "echo '1234\n1234' | passwd root"
          sudo umount -l root/dev
          sudo umount -l root/run
          sudo umount -l root/proc
          sudo umount -l root/efi
          sudo rm -rf root/efi
          sudo umount -l efi
          sudo umount -l root
          sudo kpartx -dv ubuntu-usb.img
          sudo rmdir root

      - name: 设置版本号
        run: echo "VERSION=v${{ github.run_number }}_usb" >> $GITHUB_ENV

      - name: 压缩img镜像
        run: |
          gzip -8 -k ~/ubuntu-usb/ubuntu-usb.img

      - name: 分割文件
        run: |
          split -b 1G ~/ubuntu-usb/ubuntu-usb.img.gz ./part_  # 按 1GB 分割文件

      - name: 创建并上传 Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ env.VERSION }}  # 使用推送的标签名
          name: ${{ env.VERSION }}  # Release 名称
          body: "请先合并下载的所有文件再使用"  # Release 描述
          files: |
            ./part_*
          token: ${{ secrets.GITHUB_TOKEN }}  # 使用默认的 GITHUB_TOKEN

      - name: 清理工作目录
        run: |
          sudo rm -rf ~/ubuntu-usb

