name: 构建U盘引导

on:
  push:
  schedule:
    # 每晚 12 点触发
    - cron: '0 0 * * *'

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        ubuntu_version: [jammy, noble]
        architecture: [amd64]

    steps:
      - name: 清理磁盘空间
        uses: jlumbroso/free-disk-space@main
        with:
          tool-cache: false
          android: true

      - name: 检出仓库
        uses: actions/checkout@v4

      - name: 安装依赖
        run: |
          echo "deb https://archive.ubuntu.com/ubuntu/ noble universe" | sudo tee -a /etc/apt/sources.list
          echo "deb https://archive.ubuntu.com/ubuntu/ noble-updates universe" | sudo tee -a /etc/apt/sources.list
          sudo apt-get update
          sudo apt-get install -y debootstrap xorriso mtools e2fsprogs refind parted exfat-utils

      - name: 创建boot.img
        run: |
          mkdir -p ~/ubuntu-usb
          cd ~/ubuntu-usb
          sudo dd if=/dev/zero of=boot.img bs=1M count=5120
          sudo parted boot.img --script \
            mklabel gpt \
            mkpart primary ntfs 1MiB 100%
          sudo kpartx -av boot.img
          sleep 5
          sudo mkfs.ntfs -f /dev/mapper/loop0p1
          sudo mkdir -p boot
          sudo mount -t ntfs-3g /dev/mapper/loop0p1 boot

      - name: 安装rEFInd
        run: |
          cd ~/ubuntu-usb
          sudo refind-install --usedefault /dev/mapper/loop0p1
      - name: 创建efi.img并复制boot.img内容
        run: |
          cd ~/ubuntu-usb
          sudo dd if=/dev/zero of=efi.img bs=1M count=100
          sudo parted efi.img --script \
            mklabel gpt \
            mkpart primary fat32 1MiB 100%
          sudo kpartx -av efi.img
          sleep 5
          sudo mkfs.fat -F 32 /dev/mapper/loop1p1
          sudo mkdir -p efi
          sudo mount /dev/mapper/loop1p1 efi
          sudo cp -r boot/* efi/
          sudo umount -l efi
          sudo kpartx -dv efi.img
          sleep 5

      - name: 复制宿主机内核文件到boot.img
        run: |
          cd ~/ubuntu-usb
          sudo cp /boot/vmlinuz-$(uname -r) boot/vmlinuz

      - name: 创建initrd.img
        run: |
          cd ~/ubuntu-usb
          sudo dd if=/dev/zero of=initrd.img bs=1M count=4096
          sudo parted initrd.img --script \
            mklabel gpt \
            mkpart primary ext4 1MiB 100%
          sudo kpartx -av initrd.img
          sleep 5
          sudo mkfs.ext4 /dev/mapper/loop1p1
          sudo mkdir -p root
          sudo mount /dev/mapper/loop1p1 root

      - name: 创建基础系统
        run: |
          cd ~/ubuntu-usb
          sudo debootstrap --arch=${{ matrix.architecture }} ${{ matrix.ubuntu_version }} root
          sudo mount --bind /dev root/dev
          sudo mount --bind /run root/run
          sudo mount --bind /proc root/proc
          echo "deb https://archive.ubuntu.com/ubuntu/ ${{ matrix.ubuntu_version }} universe" | sudo tee -a root/etc/apt/sources.list
          echo "deb https://archive.ubuntu.com/ubuntu/ ${{ matrix.ubuntu_version }}-updates universe" | sudo tee -a root/etc/apt/sources.list
          sudo chroot root /bin/bash -c "apt-get update && apt-get install -y linux-image-generic python3-pip"
          sudo chroot root /bin/bash -c "pip3 install --break-system-packages flask"

      - name: 复制install目录到root目录
        run: |
          sudo cp -r install ~/ubuntu-usb/root/install
          cd ~/ubuntu-usb

      - name: 启用rc-local服务并创建rc.local脚本
        run: |
          cd ~/ubuntu-usb
          # 创建 rc.local 脚本
          cat <<EOF | sudo tee root/etc/rc.local
          #!/bin/bash
          # rc.local script to run app.py on startup
          cd /install
          python3 app.py
          EOF
          sudo chmod +x root/etc/rc.local
          # 创建 systemd 服务文件
          cat <<EOF | sudo tee root/etc/systemd/system/rc-local.service
          [Unit]
          Description=/etc/rc.local Compatibility
          ConditionPathExists=/etc/rc.local

          [Service]
          Type=forking
          ExecStart=/etc/rc.local start
          TimeoutSec=0
          StandardOutput=tty
          RemainAfterExit=yes
          SysVStartPriority=99

          [Install]
          WantedBy=multi-user.target
          EOF
          # 启用 rc-local 服务
          sudo chroot root /bin/bash -c "systemctl enable rc-local.service"
          sudo chroot root /bin/bash -c "echo -e '1234\n1234' | passwd root"

      - name: 复制initrd.img到boot.img
        run: |
          cd ~/ubuntu-usb
          sudo umount -l root
          sudo kpartx -dv initrd.img
          sleep 5
          sudo rm -rf root
          sudo cp initrd.img boot/initrd.img
          sudo rm -f initrd.img
          sudo umount -l boot
          sudo kpartx -dv boot.img
          sleep 5
          sudo rm -rf boot

      - name: 分割boot.img
        run: |
          split -b 100M ~/ubuntu-usb/boot.img ./boot_part_

      - name: 设置版本号
        run: echo "VERSION=v${{ github.run_number }}_usb_${{ matrix.ubuntu_version }}_${{ matrix.architecture }}" >> $GITHUB_ENV

      - name: 创建并上传 Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ env.VERSION }}
          name: ${{ env.VERSION }}
          body: "root密码为1234"
          files: |
            ./boot_part_*
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: 清理工作目录
        run: |
          sudo rm -rf ~/ubuntu-usb
