name: 构建自定义 LiveCD
on:
  workflow_dispatch:
    inputs:
      ubuntu_version:
        description: '选择 Ubuntu 版本（例如 jammy 或 noble）'
        required: true
        default: 'noble'
        type: choice
        options:
          - jammy
          - noble
      packages:
        description: '预装软件包列表（每个软件包的名字之间以空格分隔）'
        required: false
        default: ''
        type: string

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: 检出仓库
        uses: actions/checkout@v4

      - name: 安装依赖
        run: |
          sudo apt-get update
          sudo apt-get install -y debootstrap squashfs-tools xorriso grub-common grub-efi-amd64 mtools

      - name: 创建 LiveCD
        run: |
          set -e  # 启用错误处理
          # 创建工作目录
          mkdir -p ~/livecd
          cd ~/livecd

          # 使用 debootstrap 创建基础系统
          sudo debootstrap --arch=amd64 ${{ github.event.inputs.ubuntu_version }} chroot http://archive.ubuntu.com/ubuntu/

          # 挂载必要的文件系统
          sudo mount --bind /dev chroot/dev
          sudo mount --bind /run chroot/run
          sudo mount --bind /proc chroot/proc

          # 启用 universe 软件源
          echo "deb http://archive.ubuntu.com/ubuntu ${{ github.event.inputs.ubuntu_version }} universe" | sudo tee -a chroot/etc/apt/sources.list
          echo "deb http://archive.ubuntu.com/ubuntu ${{ github.event.inputs.ubuntu_version }}-updates universe" | sudo tee -a chroot/etc/apt/sources.list

          # 进入 chroot 环境并安装必要的包
          sudo chroot chroot /bin/bash -c "apt-get update && apt-get install -y linux-image-generic live-boot systemd-sysv ${{ github.event.inputs.packages }}"

          # 解除挂载
          sudo umount chroot/dev
          sudo umount chroot/run
          sudo umount chroot/proc

          # 创建 squashfs 文件系统
          sudo mksquashfs chroot filesystem.squashfs -comp xz

          # 创建 GRUB 配置文件
          mkdir -p ~/livecd/boot/grub
          cat <<EOF > ~/livecd/boot/grub/grub.cfg
          set timeout=5
          set default=0

          menuentry "Ubuntu LiveCD" {
              set root=(hd0,msdos1)
              linux /vmlinuz boot=live quiet splash
              initrd /initrd.img
          }
          EOF

          # 创建 ISO 文件
          sudo grub-mkrescue -o ubuntu-livecd.iso ~/livecd

      - name: 上传 ISO 文件
        uses: actions/upload-artifact@v4
        with:
          name: Ubuntu-LiveCD-${{ github.event.inputs.ubuntu_version }}.iso
          path: ~/livecd/ubuntu-livecd.iso

      - name: 清理工作目录
        run: |
          sudo rm -rf ~/livecd
